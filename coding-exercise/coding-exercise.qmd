---
title: "R Coding Exercise"
---

```{r load-libraries}
## install packages and load required libraries

# install.packages("dslabs") #lines to install required packages are commented
library(dslabs) #load dslabs library

# install.packages("tidyverse") #install and load tidyverse
library(tidyverse) 

# install.packages("here")
library(here)

# install.packages("gtsummary")
library(gtsummary)

# install.packages("flextable")
library(flextable)
```


# Loading and checking the data

Below, we familiarize ourselves with the most recent dataset from the package `gapminder`.

```{r load-dataset}
# pull information on the gapminder package
help(gapminder) #open help file for gapminder dataset

# structure of the gapminder dataset?
str(gapminder) # what is the class of the gapminder dataset? how many variables? class of each variable?

# summarize the gapminder data
summary(gapminder) #gives summary statistics for each numeric variable and count information for each categorical variable

# although the str() function gives the dataset class, we can check with the function class()
class(gapminder) #gives the class of the r object gapminder

```
The `gapminder` dataset is an object of class "data.frame". Each row of the dataframe contains health and income outcomes for some year for some country. The dataframe contains 9 columns, for `country` name, `region`, and `continent`; the `year` of the observation; and 5 different demographic, health, and income outcomes for each observation. These outcomes consist of `infant_mortality`, `life_expectancy`, `fertility`, `population`, and `gdp`.

There are 10545 observations in total, gathered from 184 countries between the years of 1960 and 2016. 

# Processing the data

Here, we are going to select and process data on african countries from the `gapminder` dataset.m 

```{r subsetting-data}
# subset rows from dataset containing factor level 'Africa' from column "continent"
africadata = gapminder %>% filter(continent == "Africa") #dplyr's filter() function accomplishes this

# create life expectancy subsets of africadata containing 1) infant mortality and life expectancy and 2) population and life expectancy 
africa.IMvsLE = africadata %>% select("infant_mortality", "life_expectancy") #dplyrs select() function subsets columns
africa.PvsLE = africadata %>% select("population", "life_expectancy") 

# structure of the life expectancy subsets
str(africa.IMvsLE) #2907 observations, 2 columns (variables)
str(africa.PvsLE) #2907 observations, 2 columns (variables)

# summary of variables in life expectancy subsets
summary(africa.IMvsLE) #summary stats of both columns containing numerical values
summary(africa.PvsLE) #summary stats of both columns contain numerical values

```
The code chunk above isolates the 2907 observations from african countries only within the `gapminder` dataset and stores this subset in the "data.frame" object, `africandata`. Two subsets of the `africandata` data frame are generated. The first, `africa.IMvsLE`, contains two columns showing the values of variables `infant_mortality` and `life_expectancy` for each observation. The second, `africa.PvsLE`, contains two columns showing the values of variables `population` and `life_expectancy` for each observation. 

# Plotting 

The following code chunk generates two plots, visualizing the association of either `infant_mortality` or `population` with `life_expectancy` across Africa between 1960-2016.

```{r life-expectancy-plots}
#life_expectancy vs infant_mortality 

plot1 = ggplot() + geom_point(data = africa.IMvsLE, aes(x = infant_mortality, y = life_expectancy)) + 
  labs(x = "infant mortality", y = "life expectancy", title = "correlation between life expectancy and infant mortality in Africa, 1960 - 2016")

plot2 = ggplot() + geom_point(data = africa.PvsLE, aes(x = population, y = life_expectancy)) + 
  scale_x_continuous(trans = "log") +
  labs(x = "population", y = "life expectancy", title = "correlation between life expectancy and population size, 1960-2016")

figure_file = here("coding-exercise","results", "figures","life_exp_inf_mort_all.png")
ggsave(filename = figure_file, plot=plot1) 

figure_file = here("coding-exercise","results", "figures","life_exp_pop_all.png")
ggsave(filename = figure_file, plot=plot2) 

```

```{r load-life-expectancy-plots-inf-mort-all}
#| label: fig-inf-mort-all
#| fig-cap: "life expectancy by infant mortality, Africa, 1960-2016."
#| echo: FALSE
knitr::include_graphics(here("coding-exercise","results","figures","life_exp_inf_mort_all.png"))
```

```{r load-life-expectancy-plots-pop-all}
#| label: fig-pop-all
#| fig-cap: "life expectancy by population size, Africa, 1960-2016."
#| echo: FALSE
knitr::include_graphics(here("coding-exercise","results","figures","life_exp_pop_all.png"))
```

Obviously, there appear to be clusters of data associated with the variables `infant_mortality` and  `population`. These clusters may be the result of fixed effects from another associated variable, such as `year`. 

The code chunk below regenerates these figures, with points colored by the year during which the observations were reported. Notice that I am now using the `africadata` subset to generate these figures, as this dataset also contains the `year` variable. 

```{r life-expectancy-plots-stratified}

## life_expectancy vs infant_mortality stratified by year
plot3 = ggplot() + geom_point(data = africadata, aes(x = infant_mortality, y = life_expectancy, col = as.factor(year))) + 
  labs(x = "infant mortality", y = "life expectancy", title = "correlation between life expectancy and infant mortality in Africa, 1960 - 2016")

plot4 = ggplot() + geom_point(data = africadata, aes(x = population, y = life_expectancy, col = as.factor(year))) + 
  scale_x_continuous(trans = "log") +
  labs(x = "population", y = "life expectancy", title = "correlation between life expectancy and population size, 1960-2016")

figure_file = here("coding-exercise","results", "figures","life_exp_inf_mort_byyears.png")
ggsave(filename = figure_file, plot=plot3) 

figure_file = here("coding-exercise","results", "figures","life_exp_pop_byyears.png")
ggsave(filename = figure_file, plot=plot4) 


```

```{r load-life-expectancy-plots-inf-mort-byyears}
#| label: fig-inf-mort-byyears
#| fig-cap: "life expectancy by infant mortality, Africa, by year."
#| echo: FALSE
knitr::include_graphics(here("coding-exercise","results","figures","life_exp_inf_mort_byyears.png"))
```

```{r load-life-expectancy-plots-pop-byyears}
#| label: fig-pop-byyears
#| fig-cap: "life expectancy by population size, Africa, by year."
#| echo: FALSE
knitr::include_graphics(here("coding-exercise","results","figures","life_exp_pop_byyears.png"))
```

Here, we see that "lines" in our data demonstrate how population size and infant mortality each correlate with year. However, this is visually difficult to disentangle. What we can see, particularly from our second plot, is that life expectancy appears somewhat constant across a range of population sizes within the same year. 

Let's recreate these plots, but only choose observations from a single year. 

## More processing

The `infant_mortality` variable within `africandata` contains many NAs. The code below determines which years contain missing (NA) data for infant mortality. 

```{r years-missing-IM}
## determine which years contain missing infant mortality data
missing_IM_years = levels(factor(africadata[is.na(africadata$infant_mortality), "year"])) # which levels of factor "year" contain missing data for vairable "infant mortality"?

print(paste("Infant mortality data is missing from the years", paste(missing_IM_years, collapse = " "))) #print these years
```

Infant mortality data is missing from observations between 1960-1981, and again from 2016. Between 1981 and 2016, then, every observation from each year contains infant mortality data. So, we will plot `life_expectancy` against `infant_mortality` from observations taken during a year within that time frame, say, the year 2000.

## More plotting

The variable `population` is not missing data from the year 2000, so we can also plot `life expectancy` against `population` for observations taken in 2000, as well. 

```{r life-expectancy-plots-2000}
## extract observations from the year 2000 only and save in a new dataframe
africadata_2000 = africadata %>% filter(year == 2000)

## check 
str(africadata_2000) #all variables from africadata included
summary(africadata_2000) #and each variable is of the same class as corresponding africadata variables

## plot
## life_expectancy vs infant_mortality in the year 2000
plot5 = ggplot() + geom_point(data = africadata_2000, aes(x = infant_mortality, y = life_expectancy)) + 
  geom_smooth(data = africadata_2000, aes(x = infant_mortality, y = life_expectancy), method = 'lm') +
  labs(x = "infant mortality", y = "life expectancy", title = "correlation between life expectancy and infant mortality in Africa, year 2000")

plot6 = ggplot() + geom_point(data = africadata_2000, aes(x = population, y = life_expectancy)) + 
  scale_x_continuous(trans = "log") +
  geom_smooth(data = africadata_2000, aes(x = population, y = life_expectancy), method = 'lm') +
  labs(x = "population", y = "life expectancy", title = "correlation between life expectancy and population size, year 2000")

figure_file = here("coding-exercise","results", "figures","life_exp_inf_mort_2000.png")
ggsave(filename = figure_file, plot=plot5) 

figure_file = here("coding-exercise","results", "figures","life_exp_pop_2000.png")
ggsave(filename = figure_file, plot=plot6) 

```

```{r load-life-expectancy-plots-2000-inf-mort}
#| label: fig-inf-mort-2000
#| fig-cap: "life expectancy by infant mortality, Africa 2000."
#| echo: FALSE
knitr::include_graphics(here("coding-exercise","results","figures","life_exp_inf_mort_2000.png"))
```

```{r load-life-expectancy-plots-2000-pop}
#| label: fig-pop-2000
#| fig-cap: "life expectancy by population size, Africa 2000."
#| echo: FALSE
knitr::include_graphics(here("coding-exercise","results","figures","life_exp_pop_2000.png"))
```

Are these correlations (linear regressions) significant? 


## Simple model fits

The following code chunk utilizes the `lm()` function in R to determine the best-fit, simple linear regression model with `life_expectancy` in the year 2000 as the outcome variable and either `infant_mortality` or `population` as the predictor.

```{r lm-models-life-expectancy}
# linear regression, fixed effect, life expectancy ~ infant_mortality
fit1 = lm(data = africadata_2000, life_expectancy ~ infant_mortality) #results saved in lm object `fit1`

# linear regression, fixed effect, life expectancy ~ infant_mortality
fit2 = lm(data = africadata_2000, life_expectancy ~ population) #results saved in lm object `fit2`

# print summary of lm objects fit1 and fit2
summary(fit1)
summary(fit2)

table1 = fit1 %>% tbl_regression() #save summaries as tables using tbl_regression() function from flextable package
table2 = fit2 %>% tbl_regression() #save summaries as tables using tbl_regression() function from flextable package

# save summary tables
summarytable_file = here("coding-exercise","results", "tables-files", "lm_life_exp_inf_mort.rds")
saveRDS(table1, file = summarytable_file)

summarytable_file = here("coding-exercise","results", "tables-files", "lm_life_exp_pop.rds")
saveRDS(table2, file = summarytable_file)

# extract p-values from summaries to display on figures
p.infant_mortality = unname(summary(fit1)$coefficients[,"Pr(>|t|)"])[2]
p.population = unname(summary(fit2)$coefficients[,"Pr(>|t|)"])[2]

```

```{r load-table-LE-IM}
#| label: tbl-lm_life_exp_inf_mort-2000
#| tbl-cap: "Linear regression model of life expectancy by infant mortality."
#| echo: FALSE
resulttable=readRDS(here("coding-exercise","results","tables-files", "lm_life_exp_inf_mort.rds"))
knitr::kable(resulttable)
```

```{r load-table-LE-Pop}
#| label: tbl-lm_life_exp_pop-2000
#| tbl-cap: "Linear regression model of life expectancy by population size."
#| echo: FALSE
resulttable=readRDS(here("coding-exercise","results","tables-files", "lm_life_exp_pop.rds"))
knitr::kable(resulttable)
```

```{r life-expectancy-plots-2000-pvals}
## replot with pvals 
## life_expectancy vs infant_mortality in the year 2000
plot7 = ggplot() + geom_point(data = africadata_2000, aes(x = infant_mortality, y = life_expectancy)) + 
  geom_smooth(data = africadata_2000, aes(x = infant_mortality, y = life_expectancy), method = 'lm') +
  annotate(geom = "text", x = 125, y = 70, label = paste("p-value =", signif(p.infant_mortality, digits = 3)), color = "forestgreen") +
  labs(x = "infant mortality", y = "life expectancy", title = "correlation between life expectancy and infant mortality in Africa, year 2000")

plot8 = ggplot() + geom_point(data = africadata_2000, aes(x = population, y = life_expectancy)) + 
  scale_x_continuous(trans = "log") +
  geom_smooth(data = africadata_2000, aes(x = population, y = life_expectancy), method = 'lm') +
  annotate(geom = "text", x = 163000, y = 40, label = paste("p-value =", signif(p.population, digits = 3)), color = "maroon") +
  labs(x = "population", y = "life expectancy", title = "correlation between life expectancy and population size, year 2000")

figure_file = here("coding-exercise","results", "figures","life_exp_inf_mort_reg.png")
ggsave(filename = figure_file, plot=plot7) 

figure_file = here("coding-exercise","results", "figures","life_exp_pop_reg.png")
ggsave(filename = figure_file, plot=plot8) 

```

```{r load-life-expectancy-plots-2000-pvals-inf-mort}
#| label: fig-reg-inf-mort-2000
#| fig-cap: "linear regression of life expectancy by infant mortality, Africa 2000."
#| echo: FALSE
knitr::include_graphics(here("coding-exercise","results","figures","life_exp_inf_mort_reg.png"))
```

```{r load-life-expectancy-plots-2000-pvals-pop}
#| label: fig-reg-pop-2000
#| fig-cap: "linear regression of life expectancy by population size, Africa 2000."
#| echo: FALSE
knitr::include_graphics(here("coding-exercise","results","figures","life_exp_pop_reg.png"))
```

Life expectancy appears to decrease with infant mortality, while decreasing only slightly with population size (@fig-reg-inf-mort-2000, @fig-reg-pop-2000). Using a definition of $pvalue < 0.05$ as significance, it is evident that population size is a poor predictor of life expectancy ($p = 0.6 > 0.05$). However, infant mortality is in fact a better, significant predictor of life expectancy ($p = 2 \times 10^{-8}$) (@tbl-lm_life_exp_inf_mort-2000, @tbl-lm_life_exp_pop-2000). Thus, we fail to reject the null hypothesis that life expectancy is not correlated with population size, but do reject the null hypothesis that life expectancy is not correlated with infant mortality rates.


