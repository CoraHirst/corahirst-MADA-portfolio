---
title: "Data Exercise Week 4"
author: "Cora Hirst"
editor: visual
execute: 
  warning: false
  message: false
---

```{r setup}
## Install and load required packages
#install.packages("dplyr")
library(dplyr)

#install.packages("purrr")
library(purrr)

#install.packages("lubridate")
library(lubridate)

#install.packages("ggplot2")
library(ggplot2)

#install.packages("readxl")
library(readxl)

#install.packages("openxlsx")
library(openxlsx)

#install.packages("here")
library(here)

```

# Generating a synthetic dataset

For this assignment, I will be generating a synthetic dataset with built-in associations between variables. Then, I will be recovering these associations.

## Synthetic Dataset Generation: High disease severity in patients is correlated with a longer time between infection and vaccination

The chunk below simply sets a seed for reproducibility (I'd like for my probability function to assign the same numbers each time I run it), and defines the number of observations I'd like to generate in my dataset.

```{r set-seed}
# Set a seed for reproducibility
set.seed(123)

# Define the number of observations to generate
n_patients <- 100
```

Here, I will be generating the dataset as a `data.frame`. The dataset will contain 5 variables: `pat_ID` will be a character variable storing the IDs of various patients; `age` will store the age of each of these patients, and I will restrict these ages between 10 and 100; `time_post_vaccination` will be a numeric variable storing the amount of time elapsed, in days, since the most recent vaccination; `time_post_infection` will be a numerical variable storing the amount of time elapsed, in days, since the approximate date at which the patient was infected; and finally, `disease_severity` will be a categorical variable storing an arbitrary measure of disease severity, ranked as an integer between 0 (asymptomatic) and 10 (death, sadly).

I chose to create an association between the *amount of time between the most recent vaccination and infection* (hereon refered to as "time between") and *disease severity*. The simplest way to do this, and the way I chose, is to treat the amount of time between the most recent vaccination and infection as proportional to the probability of severe disease.

I decided that the individual with the greatest time between infection and vaccination would undoubtedly have the greatest disease severity. Technically, I divided the *time between* for each patient by the *maximum time between* among all patients ($\frac{time \ between}{max \ time \ between}$) - this is the probability of severe disease independent of other factors.

However, I also want some association between age and the probability of severe disease; so, I define the actual probability of severe disease as $\frac{time \ between}{max \ time \ between} \times \frac{age}{max \ age}$. This way, the oldest individuals with he greatest time between infection and vaccination have the worst disease severity.

Then, starting the disease severity of each individual at $0$, I generate a random number between 0 and 1. If an individual's probability of severe disease is greater than this randomly generated number, I add $1$ to their disease severity. I do this 10 times, so the maximum possible disease severity is $10$.

```{r generating-data}

## empty dataframe with n_patients observations 
data = data.frame(
  pat_id = character(n_patients), #patient ID
  age = numeric(n_patients), #patient age
  time_post_vaccination = integer(n_patients), #days elapsed since last vaccination 
  time_post_infection = numeric(n_patients), #days elapsed since infection
  disease_severity = integer(n_patients) #on a scale from 1-10, how "bad" were illness symptoms
)

## populating the variables
# patient id
data$pat_id = paste0("ID_", sample(100:999, 100, replace=F) ) # each gets a 3-digit ID because I feel like it 
# patient age
data$age = c(sample(10:50, 30, replace=T), sample(51:100, 70, replace = T)) #I want to have more samples from age < 50, and to not children under 10
data$time_post_infection = c(sample(7:60, 100, replace=T)) # between one week and two months
data$time_post_vaccination = data$time_post_infection + c(sample(30:200, 100, replace=T)) # all individuals had a vaccination between 1 month and 200 days before their infection 

### alright, now I want to make a correlation between disease severity in the time between vaccination and infection. That means I need to add a third column, time between vaccination and infection, and bias my samples of numbers 1:10 by that number. Then I'll delete that column so that the "analyst" has to think of it themselves muahahahaha

data$time_between = data$time_post_vaccination - data$time_post_infection #the bigger the difference, the greater the probability of getting 10

## how to do disease severity? for loop 10 times. Probability of adding 1 is equal to (timebetween/maxtimebetween); thus, if a randomly generated number between 0 and 1 is less than this probability, we add 1 to disease severity. The longer between vaccine and infection, the worse protected we are! -> sometime it would be cool to alter this so there is some penalty to getting infected immediatly after vaccination. :)

## however, I also want some relationship between age and disease severity. So, I am going to reduce the "effective" time between vaccination and infection by age. 

# vector to store our simulated disease severities
disease_severities = rep(0, 100)

# simulation to generate disease severities based on time between vaccination and infection 
for(c in 1:10){
  for(i in 1:n_patients){
    prob = (data[i, "time_between"])/max(data$time_between)
    age_adjust_prob = prob * (data[i, "age"])/max(data$age)
    rand = runif(1, min = 0, max = 1)
    if(age_adjust_prob > rand){disease_severities[i] = disease_severities[i] + 1}
  }
  c = c+1
}

# add these disease severities to our dataset as FACTOR
data$disease_severity = factor(disease_severities)

#finally, remove our "time between" category - though I'm just going to add it back in the next code chunk ;)
data = data[,!(names(data) %in% "time_between")]

```

```{r save-dataset}

### and now we have our dataset! I can write it as an excel workbook for the sake of reproducibility, and I'll add my codebook to it
codebook = data.frame(variable = names(data),
                      description = c("unique patient 3-digid ID", "patient age, range [10,100]", "time elapsed since patient's most recent vaccine, range [64,249]", "time elapsed since approximate date of infection, range [7,60]", "categorical measure of disease severity, scale of 0 (asymptomatic) to 10 (death)"),
                      values = c("character: ID_XXX", "numerical", "numerical", "numerical", "factor"))

# save the data dataframe and codebook dataframe in a list for export
synth_data_list = list(data, codebook)
names(synth_data_list) = c("breakthrough_infections", "codebook")

# saving dataset with openxlsx
processed_dataset = here("data-exercise", "data", "synthetic_data_vaccines_work.xlsx")
openxlsx::write.xlsx(synth_data_list, file = processed_dataset)

```

## Exploring Synthetic Data: Do I observe the correct predictors for disease severity?

In the following code chunk, I explore my synthetic dataset to see which variables appear to have the greatest effect on `disease_severity`.

```{r exploring-synthetic-data}

# what is the structure? Do my variables take the form I expect? 
str(data)
summary(data)

# what is the distribution of individuals by age? disease_severity? 
plot0 = ggplot() + geom_histogram(data = data, aes(x = age, y=..density..), colour="black", fill="white") +
  geom_density(data = data, aes(x = age), alpha = 0.2, fill = "salmon") +
  geom_vline(xintercept = mean(data$age), color="salmon", linetype="dashed", linewidth=1) +
  labs(title = "distribution of patients by age")

plot1 = ggplot() + geom_histogram(data = data, aes(x = disease_severity), stat = "count", colour="black", fill="white") +
  geom_vline(xintercept = ceiling(mean(as.numeric(levels(data$disease_severity))[data$disease_severity])), color="blue", linetype="dashed", linewidth=1) +
  labs(title = "distribution of patients by disease severity")

# let's see distribution of ages in each disease severity category 
plot2 = ggplot() + geom_boxplot(data = data, aes(x = disease_severity, y = age)) +
  geom_point(data=data, aes(x = disease_severity, y = age, col = disease_severity), alpha = 0.75) +
  labs(x = "disease severity", y = "age", title = "ages of patients in each disease category") + 
  theme(legend.position = "none") + # I dont want the legend to show
  scale_color_manual(values = c("darkgreen",
                         "forestgreen", 
                         "springgreen",
                         "olivedrab1",
                         "gold",
                         "goldenrod1",
                         "orange",
                         "darkorange2",
                         "orangered2",
                         "red3",
                         "darkred"))

# let's see if disease severity correlates with age 
plot3 = ggplot() + geom_point(data=data, aes(x = age, y = disease_severity, col = time_post_vaccination)) + 
  geom_smooth(data = data, aes(x = age,  y=as.numeric(levels(disease_severity))[disease_severity]), method = "lm") + #had to unfactor the disease severity categoriy with as.numeric(levels())[]
  labs(x = "age", y = "disease severity", title = "correlation between disease severity and age")  
#heck yeah it does, so that part of the simulation worked! 

# let's see if disease severity correlates with time since vaccination
plot4 = ggplot() + geom_point(data = data, aes(x=time_post_vaccination, y=disease_severity)) + 
  geom_smooth(data = data, aes(x = time_post_vaccination, y=as.numeric(levels(disease_severity))[disease_severity]), method = "lm") + #had to unfactor the disease severity categoriy with as.numeric(levels())[]
  labs(x = "time post vaccination", y = "disease severity", title = "correlation between disease severity and time since vaccination") 

# same for time post infection 
plot5 = ggplot() + geom_point(data = data, aes(x=time_post_infection, y=disease_severity)) +
  labs(x = "time post infection", y = "disease severity", title = "correlation between disease severity and time post infection")  

## save these files 
#figure 0 - yes, I added one and was too lazy to change the numbering 
figure_file = here("data-exercise", "figures", "age_distribution.png")
ggsave(filename = figure_file, plot=plot0) 

#figure 1
figure_file = here("data-exercise", "figures", "severity_distribution.png")
ggsave(filename = figure_file, plot=plot1) 

#figure 2
figure_file = here("data-exercise", "figures", "age_severity_boxplots.png")
ggsave(filename = figure_file, plot=plot2) 

#figure 3
figure_file = here("data-exercise", "figures", "age_severity_scatter.png")
ggsave(filename = figure_file, plot=plot3) 

#figure 4
figure_file = here("data-exercise", "figures", "time_post_vacc_severity_scatter.png")
ggsave(filename = figure_file, plot=plot4) 

#figure 5
figure_file = here("data-exercise", "figures", "time_post_inf_severity_scatter.png")
ggsave(filename = figure_file, plot=plot5) 

```

I introduced an association between `age` and `disease_severity`, and I should observe some positive correlation between `disease_severity` and `age`.

```{r load-age-severity-boxplots}
#| label: fig-age-severity-boxplots
#| fig-cap: "Summary of the distribution of ages of patients with varying diseases severities. Each colored point represents one patient."
#| echo: FALSE
knitr::include_graphics(here("data-exercise","figures","age_severity_boxplots.png"))
```

Clearly, there is a correlation between age and disease severity (@fig-age-severity-boxplots.) Interestingly, the distribution of ages of patients with high disease severities is particularly narrow when compared to patients with lower disease severities; this can in part be attributed to a smaller representation of patients with high disease severity (@fig-severity-distribution.)

```{r load-severity-distribution }
#| label: fig-severity-distribution
#| fig-cap: "Distribution of patients with varying diseases severities. Blue line shows the mean disease severity across patients."
#| echo: FALSE
knitr::include_graphics(here("data-exercise","figures","severity_distribution.png"))
```

However, we also need to take into consideration that there are a large number of older patients (@fig-age-distribution), and a wider distribution of the older aged individuals across disease severity.

```{r load-age-distribution }
#| label: fig-age-distribution
#| fig-cap: "Distribution of patients by age. Pink line shows the mean age across patients."
#| echo: FALSE
knitr::include_graphics(here("data-exercise","figures","age_distribution.png"))
```

Thus, there is likely some other variable influencing the number of patients with high disease severity. When I plot the correlation between age and disease severity *and observe the associated time elapsed since last vaccination* (@fig-age-severity-scatter), it becomes apparent that higher disease severities are associated with longer times post vaccination (light colored dots).

```{r load-age-severity-scatter }
#| label: fig-age-severity-scatter
#| fig-cap: "Correlation between patient's age and disease severity."
#| echo: FALSE
knitr::include_graphics(here("data-exercise","figures","age_severity_scatter.png"))
```

Referring back to the generation of the dataset, I also introduced an association between the time between `time_post_vaccination` and `time_post_infection` and `disease_severity`. I expect that, without calculating and plotting this time difference itself against `disease_severity`, there should be some signal of the negative correlation in the plot of `time_post_vaccination` and `disease_severity`. Because `time_post_vaccination` has a wider range than `time_post_infection`, I anticipate it will have had a greater effect on the variation within the difference between `time_post_vaccination` and `time_post_infection`; thus, I expect this signal to be lost when plotting the relationship between `time_post_infection` and `disease_severity`.

```{r load-time-post-vacc-severity-scatter }
#| label: fig-time-post-vacc-severity-scatter
#| fig-cap: "Correlation between the time elapsed since the individual's last vaccination and disease severity."
#| echo: FALSE
knitr::include_graphics(here("data-exercise","figures","time_post_vacc_severity_scatter.png"))
```

There is, in fact, some positive correlation recovered between the time elapsed since a patient's last vaccination and the severity of their disease (@fig-time-post-vacc-severity-scatter.) However, the significance of this association is not apparent.

Lastly, I would also like to see if the time elapsed since being effected (how long the patient had been infected before the observation was made) has any visual effect- it's important to see if my random sampling and pairing has generated any!

```{r load-time-post-inf-severity-scatter}
#| label: fig-time-post-inf-severity-scatter
#| fig-cap: "Correlation between the time elapsed since the individual's infection and disease severity."
#| echo: FALSE
knitr::include_graphics(here("data-exercise","figures","time_post_inf_severity_scatter.png"))
```

@fig-time-post-inf-severity-scatter demonstrates that there is little correlation between disease severity and the time elapsed since becoming infected.

2)  Also greater variation in the ages of patients with lower disease severities than higher disease severities, and not just dependent upon fewer samples (more samples captured for older ages) -\> though may be a result of fewer samples for youths. Could check this out by exploring ages before and after the mean as independent datasets (for later!)

## Synthetic Data Analysis

Lets do 3 things:

1)  fixed effects regression for severity\~age

2)  fixed effects regression for severity\~time_post_vaccination

3)  mixed effects regression for severity\~time_post_vaccination with age and ID as effect

4)  Repeat fixed and mixed effect models for severity\~time_between, and severity\~time_between with age/ID as effect


